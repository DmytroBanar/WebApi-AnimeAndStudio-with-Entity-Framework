// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using UnitOfWorkDemo.Infrastructure;

#nullable disable

namespace UnitOfWorkDemo.Infrastructure.Migrations
{
    [DbContext(typeof(DbContextClass))]
    [Migration("20231105215541_anime")]
    partial class anime
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("UnitOfWorkDemo.Core.Models.AnimeDetails", b =>
                {
                    b.Property<int>("AnimeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AnimeId"));

                    b.Property<string>("AnimeAuthor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("AnimeEpisodes")
                        .HasColumnType("integer");

                    b.Property<string>("AnimeName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("AnimeScore")
                        .HasColumnType("real");

                    b.Property<int>("AnimeStudioId")
                        .HasColumnType("integer");

                    b.Property<string>("AnimeType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("AnimeId");

                    b.HasIndex("AnimeStudioId");

                    b.ToTable("Animes");
                });

            modelBuilder.Entity("UnitOfWorkDemo.Core.Models.AnimeStudioDetails", b =>
                {
                    b.Property<int>("StudioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("StudioId"));

                    b.Property<string>("StudioCountry")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("StudioMPWork")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("StudioName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("StudioNumProjects")
                        .HasColumnType("integer");

                    b.HasKey("StudioId");

                    b.ToTable("Studios");
                });

            modelBuilder.Entity("UnitOfWorkDemo.Core.Models.AnimeDetails", b =>
                {
                    b.HasOne("UnitOfWorkDemo.Core.Models.AnimeStudioDetails", "AnimeStudio")
                        .WithMany("Anime")
                        .HasForeignKey("AnimeStudioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnimeStudio");
                });

            modelBuilder.Entity("UnitOfWorkDemo.Core.Models.AnimeStudioDetails", b =>
                {
                    b.Navigation("Anime");
                });
#pragma warning restore 612, 618
        }
    }
}
